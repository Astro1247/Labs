#include "stdafx.h"
#include "locale.h"

int main()
{
	char yn; // Переменная, отвачающая за выбор пользователя повторить выполнение алгоритма или нет
	setlocale(LC_ALL, "RUS"); // Задаем поддержку русского языка
	do
	{
		labFunc(); //Вызываем функцию содержащую алгоритм с заданием лабораторной работы
		printf("Повторить выполнение функции? (Y/N) ");
		clean_stdin(); //Очистка буфера ввода
		scanf("%c", &yn);
		getchar();
		system("cls");
	} while (yn == 'y' && yn != 'n'); // Если пользователь ввел "Y" то повторить выполнение алгоритма labFunc()
	return 0;
}

int labFunc()  // Функция, содержащая алгоритм с заданием лабораторной работы
{
	int sizeA = 0, sizeB = 0, size = 0; // Размеры массивов
	int err; //Переменная, отвечающая за наличие ошибок
	int *A, *B, *C; // Сами массивы
	do
	{
		err = 0; // Очистка переменной отвечающей за наличие ошибок (если ошибки будут, программа задаст значание позже)
		printf("Введите размер массива A: ");
		clean_stdin(); // Очистить буфер ввода 
		if (scanf("%i[0-9]", &sizeA) == 1) {} // Проверка ввел ли пользователь буквы или цифры
		else
		{
			printf("Буквы.\n");
			err = 1; // Произошла ошибка.
		}
		if (sizeA > 100 || sizeA < 1 && err == 0) // Проверка введенного числа на вхождение в допустимый диапазон вводимых чисел
		{
			printf("Введенное число не входит в допустимый диапазон вводимыъ чисел!\nДопустимый диапазон: 1-100\n");
			err = 1; // Произошла ошибка.
		}
	} while (err == 1); // Повторять пока есть ошибка
	do
	{
		err = 0; // Очистка переменной отвечающей за наличие ошибок (если ошибки будут, программа задаст значание позже)
		printf("Введите размер массива B: ");
		clean_stdin(); // Очистить буфер вввода	
		if (scanf("%i[0-9]", &sizeB) == 1) {} // Проверка ввел ли пользователь буквы или цифры
		else
		{
			printf("Буквы.\n");
			err = 1; // Произошла ошибка.
		}
		if (sizeB > 100 || sizeB < 1 && err == 0) // Проверка введенного числа на вхождение в допустимый диапазон вводимых чисел
		{
			printf("Введенное число не входит в допустимый диапазон вводимыъ чисел!\nДопустимый диапазон: 1-100\n");
			err = 1; // Произошла ошибка.
		}
	} while (err == 1); // Повторять пока есть ошибка
	if (sizeA > sizeB)										  /*---Получаем максимальное значение------*/
		size = sizeA;										  /*---среди введенных размеров и задаем---*/
	else if (sizeA < sizeB)									  /*---этот размер массиву С---------------*/
		size = sizeB;
	else
		size = sizeA;
	A = (int*)malloc(sizeA * sizeof(int));					   //Выделяем массивам нуобходимую для них память из кучи
	B = (int*)malloc(sizeB * sizeof(int));					   //Выделяем массивам нуобходимую для них память из кучи
	C = (int*)malloc(size * sizeof(int));					   //Выделяем массивам нуобходимую для них память из кучи
	for (int i = 0; i < sizeA; i++) // Повторять для всех элементов массива А
	{
		do																
		{																
			printf("Введите %i элемент массива A: ", i + 1);			
			clean_stdin(); // Очистить буфер вввода												
			err = 0; // Очистка переменной отвечающей за наличие ошибок (если ошибки будут, программа задаст значание позже)							
			if (scanf("%6i", &A[i]) == 1) {} // Проверка ввел ли пользователь буквы или цифры							
			else														
			{															
				printf("Буквы.\n");										
				err = 1; // Произошла ошибка.										
			}															
			if (A[i] > 1000 || A[i] < -1000 && err != 1) // Проверка введенного числа на вхождение в допустимый диапазон вводимых чисел				
			{
				printf("Введенное число не входит в допустимый диапазон (можно вводить числа от -1000 до 1000)\n");
				err = 1; // Произошла ошибка.
			}
		} while (err == 1); // Повторять пока есть ошибка
	}
	system("cls"); // Очистить консоль
	for (int i = 0; i < sizeB; i++) // Повторять для всех элементов массива В
	{
		do
		{
			printf("Введите %i элемент массива B: ", i + 1);
			clean_stdin(); // Очистить буфер вввода	
			err = 0; // Очистка переменной отвечающей за наличие ошибок (если ошибки будут, программа задаст значание позже)
			if (scanf("%6i", &B[i]) == 1) {} // Проверка ввел ли пользователь буквы или цифры
			else
			{
				printf("Буквы.\n");
				err = 1; // Произошла ошибка.
			}
			if (B[i] > 1000 || B[i] < -1000 && err != 1) // Проверка введенного числа на вхождение в допустимый диапазон вводимых чисел
			{
				printf("Введенное число не входит в допустимый диапазон (можно вводить числа от -1000 до 1000)\n");
				err = 1; // Произошла ошибка.
			}
		} while (err == 1); // Повторять пока есть ошибка
	}
	system("cls");// Очистить консоль
	for (int i = 0; i < size; i++) // Повторять столько раз, сколько максимально есть в любом из массивов
	{
		if (i < sizeA) // Проверка есть ли еще в массиве А элементы
			printf("A[%i]=%i ", i, A[i]);
		if (i < sizeB) // Проверка есть ли еще в массиве В элементы
			printf("\t B[%i]=%i\n", i, B[i]);
		else
			printf("\n");
	}										 /*---Обнулить значение переменной k, которая будет отвечать за-----------------------*/
	int k = 0;                               /*---количество записанных элементов в массив С для дальнейшего их вывода на экран---*/
	for (int i = 0; i < sizeA; i++)	// Повторять пока в массиве А есть элементы		 
	{
		for (int j = 0; j < sizeB; j++) // Проверить все элементы в массиве В
		{
			if (A[i] == B[j]) // Если найдено совпадение => прекратить проверку
				break;
			else if (j == sizeB - 1 && i < sizeA) /*---Если по достижению конца массива В не было совпадений---*/
			{									  /*---то записать данное число из массива А в массив С--------*/
				C[k] = A[i];
				k++;		  // Увелпчить переменную k, отвечающую за количество записанных элементов в массив С
			}
		}
	}
	if (k == 0) { printf("Массив С пуст\n"); } // Проверить были ли записаны в массив С каки-либо значения
	else // Если массив не пуст => вывести и отсортировать его
	{
		for (int i = 0; i < size; i++) // Повторяем пока i меньше размера массива С
		{
			if (C[i] > -1000 && C[i] < 1000)                       /*---Перед выводом на экран выполнить проверку на---------*/
				printf("Элемент массива C[%i]: %i\n", i, C[i]);	   /*---соответствие числа в массиве С заданному диапазону---*/
		}
		printf("Сортировка массива . . . \n");
		int temp; // Переменная для временного хранения числа при сортировке массива
		for (int i = 0; i < k; i++) {				// Сортируем массив С	   
			for (int j = 0; j < k; j++) {			// Сортируем массив С	   
				if (C[j] > C[j + 1])				// Сортируем массив С	   
				{									// Сортируем массив С	   
					temp = C[j];					// Сортируем массив С	   
					C[j] = C[j + 1];				// Сортируем массив С	   
					C[j + 1] = temp;				// Сортируем массив С	   
				}									// Сортируем массив С	   
			}										// Сортируем массив С
		}											// Сортируем массив С
		printf("Отсортированный массив:\n");
		int p = 0; // Счетчик количества выведенных элементов
		for (int i = 0; i < size; i++)
		{
			if (C[i] > -1000 && C[i] < 1000)
			{
				printf("Элемент массива C[%i]: %i\n", p, C[i]);
				p++;
			}
		}
	}
	system("pause"); // Приостановить программу
	return 0;
}

int clean_stdin() // Функция очистки буфера ввода с клавиатуры
{
	fflush(stdin);
	fseek(stdin, 0, SEEK_END);
	return 0;
}